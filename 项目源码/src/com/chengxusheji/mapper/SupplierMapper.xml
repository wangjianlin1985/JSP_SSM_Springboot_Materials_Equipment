<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.SupplierMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加供应商记录 -->
	<insert id="addSupplier" parameterType="supplier">
		insert into t_supplier(supplierName,city,aPerson,djrlxfs,luruTime,luruRen) values 
		(#{supplierName},#{city},#{aPerson},#{djrlxfs},#{luruTime},#{luruRen})
	</insert>

	<!-- 按照查询条件分页查询供应商记录 -->
	<select id="querySupplier" resultMap="supplierMap" >
		select t_supplier.* from t_supplier ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="supplierMap" type="supplier">
        <id property="supplierId" column="supplierId" />
    </resultMap>

    <!-- 按照查询条件查询所有供应商记录 -->
	<select id="querySupplierList" resultMap="supplierMap" >
		select t_supplier.* from t_supplier ${where}
	</select>

    <!-- 按照查询条件的供应商记录数 -->
	<select id="querySupplierCount" resultType="int">
		select count(*) from t_supplier ${where}
	</select>

	<!-- 根据主键查询某个供应商记录 -->
	<select id="getSupplier" parameterType="int" resultMap="supplierMap">
		select * from t_supplier where t_supplier.supplierId = #{supplierId}
	</select>

	<!-- 更新供应商记录 -->
	<update id="updateSupplier" parameterType="supplier">
		update t_supplier set supplierName=#{supplierName},city=#{city},aPerson=#{aPerson},djrlxfs=#{djrlxfs},luruTime=#{luruTime},luruRen=#{luruRen} where supplierId = #{supplierId}
	</update>

	<!-- 删除供应商记录 -->
	<delete id="deleteSupplier" parameterType="int">
		delete from t_supplier where supplierId=#{supplierId}
	</delete>

</mapper>
